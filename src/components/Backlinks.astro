---
import { type Edge, type Data, type Node } from "vis-network";

interface Props {
  postSlug: string;
}

const { postSlug } = Astro.props;

const graphJson = await import("../pages/graph.json");
const { nodes, edges }: Data = await graphJson
  .GET({})
  .then((response) => response.json());

const backlinks = (edges as Edge[] | undefined)?.filter(
  (edge) => edge.to === postSlug
);
---

{
  backlinks && backlinks.length > 0 && (
    <>
      <h5>Backlinks</h5>
      <ol class="backlinks">
        {backlinks.map((backlink) => {
          const referenceNode = (nodes as Node[] | undefined)?.find(
            (node) => backlink.from === node?.id
          );
          return (
            <li class="backlink">
              <a href={`/notes/${referenceNode?.id}`}>
                {referenceNode?.label || backlink.from}
              </a>
            </li>
          );
        })}
      </ol>
    </>
  )
}

<style>
  .backlink a {
    text-decoration: none;
    color: var(--nord0);
  }

  .backlink a:hover p {
    color: var(--nord10);
  }
</style>
